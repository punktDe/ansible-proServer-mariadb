#!/usr/bin/env bash
set -e -u -o pipefail

rc=0
{% for database in mariadb.databases|dict2items|sort(attribute='key')|map(attribute='value')|reject('none') %}
{% set database_backup_enabled = database.backup.enabled|default(mariadb.backup.enabled) %}
{% if database_backup_enabled %}
{% set database_backup_dest = database.backup.dest|default(mariadb.backup.dest) %}
{% set database_backup_mysqldump = mariadb.backup.mysqldump.copy() %}
{% set _ = database_backup_mysqldump.update(database.backup.mysqldump|default({})) %}
{% set database_backup_structure_only = mariadb.backup.structure_only.copy() %}
{% set _ = database_backup_structure_only.update(database.backup.structure_only|default({})) %}
{% set database_backup_structure_only = database_backup_structure_only|dict2items|selectattr('value', 'eq', true)|map(attribute='key') %}
{% set database_backup_compression = mariadb.backup.compression.copy() %}
{% set _ = database_backup_compression.update(database.backup.compression|default({})) %}
{% set database_backup_file = database_backup_dest + '/' + database.name + '.sql' + (('.' + database_backup_compression.extension) if database_backup_compression.enabled else '') %}
mkdir -p -- {{ database_backup_dest }}
(umask 0077 && touch {{ database_backup_file|quote }}.tmp)
if ({{ database_backup_mysqldump|dict2items|sort(attribute='key')|map(attribute='value')|reject('none')|map('quote')|join(' ') }} --no-data -- {{ database.name|quote }} && {{ database_backup_mysqldump|dict2items|sort(attribute='key')|map(attribute='value')|reject('none')|map('quote')|join(' ') }} --no-create-info{% for table in database_backup_structure_only %} --ignore-table={{ database.name|quote }}.{{ table|quote }}{% endfor %} -- {{ database.name|quote }}) {% if database_backup_compression.enabled %}| {{ database_backup_compression.command }} {% endif %}> {{ database_backup_file|quote }}.tmp; then
    mv -- {{ database_backup_file|quote }}.tmp {{ database_backup_file|quote }}
else
    rc=1
fi
{% endif %}
{% endfor %}
exit $rc
