---
- name: Check if grastate.dat exists
  stat:
    path: /var/lib/mysql/grastate.dat
  register: mariadb_grastate

- name: Check if cluster is save to bootstrap
  when: mariadb_grastate.stat.exists
  slurp:
    path: /var/lib/mysql/grastate.dat
  register: mariadb_bootstrap

- name: Check if mariadb is already runnning
  stat:
    path: /var/run/mysqld/mysqld.pid
  register: mariadb_pid

- name: Fail if cluster cannot be initialzed
  fail:
    msg: "cluster initializer is not ready to bootstrap cluster"
  when:
    - mariadb.galera.initializer
    - mariadb_bootstrap.content is defined
    - "'Safe to Bootstrap: 0' in mariadb_bootstrap.content | b64decode"
    - not mariadb_pid.stat.exists

- block:

  - name: Stop MariaDB
    service:
      name: mariadb
      state: stopped

  - name: Initialize cluster
    when: mariadb.galera.initializer
    command: /usr/bin/galera_new_cluster

  - name: Wait that cluster is initialized
    when: mariadb.galera.initializer
    shell: "{{ lookup('template', 'has_joined_cluster.sh') }}"

  - name: Join cluster
    when: not mariadb.galera.initializer
    service:
      name: mariadb
      state: started

  - name: Wait that node has joined cluster
    when: not mariadb.galera.initializer
    shell: "{{ lookup('template', 'has_joined_cluster.sh') }}"

  when:
    - mariadb.galera.cluster
    - not mariadb.galera.arbitrator
    - >
      not mariadb_grastate.stat.exists
      or 'Safe to Bootstrap: 1' in mariadb_bootstrap.content | b64decode
      or not mariadb.galera.initializer and not mariadb_pid.stat.exists
