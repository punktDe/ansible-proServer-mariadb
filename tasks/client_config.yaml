---
- name: Check for root password
  changed_when: false
  stat:
    path: /usr/local/etc/mysql-password
  register: mariadb_mysql_password

- name: Create root password
  when: mariadb_mysql_password.stat.exists == false
  copy:
    dest: /usr/local/etc/mysql-password
    content: "{{ lookup('password', '/dev/null length=32 chars=ascii_letters,digits') }}"
    owner: "{{ mariadb.system.user.root.name }}"
    group: "{{ mariadb.system.user.root.group }}"
    mode: '0600'

- name: Read root-password
  slurp:
    src: "{{ item }}"
  with_items:
    - /usr/local/etc/mysql-password
  register: mariadb_slurp_result

- name: Set root password in database
  when: not mariadb.galera.cluster or mariadb.galera.initializer
  mysql_user:
    name: root
    password: "{{ mariadb_slurp_result.results.0.content|b64decode|trim }}"
    host: localhost
    login_unix_socket: "{{ mariadb.socket if mariadb.socket else none }}"

- name: Write root password to cli client configuration file
  blockinfile:
    path: "{{ item.path }}"
    owner: "{{ item.owner }}"
    group: "{{ item.group }}"
    mode: 0600
    create: yes
    block: |
      [client]
      password={{ mariadb_slurp_result.results.0.content|b64decode|trim }}
    marker: "# {mark} ANSIBLE MANAGED BLOCK: MariaDB root password"
  loop_control:
    label: "{{ item.path }}"
  with_items:
    - path: /root/.my.cnf
      owner: "{{ mariadb.system.user.root.name }}"
      group: "{{ mariadb.system.user.root.group }}"
    - path: "{{ ansible_user_dir }}/.my.cnf"
      owner: "{{ ansible_user_uid }}"
      group: "{{ ansible_user_gid }}"
